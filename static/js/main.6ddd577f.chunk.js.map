{"version":3,"sources":["Contacts/Contacts.js","Filter/Filter.js","Container/Container.js","Form/Form.js","App.js","index.js"],"names":["Contacts","contacts","onDeleteContact","map","id","name","number","className","onClick","Filter","value","onChange","type","Container","children","Form","onSubmit","useState","setName","setNumber","handleChange","e","target","currentContact","uuidv4","reset","preventDefault","pattern","title","required","App","setContacts","filter","setFilter","useEffect","localStorage","getItem","JSON","parse","prevState","setItem","stringify","visibleContacts","contact","toLowerCase","includes","data","find","alert","evt","deletedContactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ddd577f.chunk.js","sourcesContent":["import './Contacts.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Contacts = ({ contacts, onDeleteContact }) => (\r\n  <ul>\r\n    {contacts.map(({ id, name, number }) => (\r\n      <li key={id} className=\"item\">\r\n        <p className=\"text\">{name}:</p>\r\n        <span>{number}</span>\r\n        <button className=\"button\" onClick={() => onDeleteContact(id)}>\r\n          Delete\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContacts.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string.isRequired)),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import './Filter.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <label>\r\n    <p className=\"text\">Find contacts by name</p>\r\n    <input type=\"text\" value={value} onChange={onChange}></input>\r\n  </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import PropTypes from 'prop-types';\r\nimport './Container.css';\r\n\r\nconst Container = ({ children }) => <div className=\"сontainer\">{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { useState } from 'react';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport './Form.css';\r\n\r\nfunction Form({ onSubmit }) {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const id = uuidv4();\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n  const currentContact = { name, number, id };\r\n  const handelSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    onSubmit(currentContact);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handelSubmit} className=\"form\">\r\n      <label>\r\n        <span>Name</span>\r\n        <input\r\n          id={uuidv4()}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <label>\r\n        <span>Number</span>\r\n        <input\r\n          id={uuidv4()}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n      </label>\r\n      <button className=\"button\" type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nexport default Form;\r\n\r\n","import { useState, useEffect } from 'react';\nimport Contacts from './Contacts';\n//import { v4 as uuidv4 } from 'uuid';\nimport Filter from './Filter';\nimport Container from './Container';\nimport Form from './Form';\n\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    if (localStorage.getItem('contacts')) {\n      setContacts(JSON.parse(localStorage.getItem('contacts')));\n    }\n  }, []);\n\n  useEffect(\n    prevState => {\n      if (contacts !== prevState) {\n        localStorage.setItem('contacts', JSON.stringify(contacts));\n      }\n    },\n    [contacts],\n  );\n\n  const formSubmitHandler = data => {\n    if (contacts.find(contact => contact.name === data.name)) {\n      alert(`${data.name} is already in contacts`);\n      return;\n    }\n    setContacts(prevState => [data, ...prevState]);\n  };\n\n  const deleteContact = deletedContactId => {\n    setContacts(prevState =>\n      prevState.filter(contact => contact.id !== deletedContactId),\n    );\n  };\n\n  const changeFilter = evt => {\n    setFilter(evt.target.value);\n  };\n\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\n  );\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <Form onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={changeFilter} />\n      <Contacts contacts={visibleContacts} onDeleteContact={deleteContact} />\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n\n"],"sourceRoot":""}